{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify/utils/class.js","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify/core/tokens/text.js","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify/core/state.js","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify/core/tokens/create-token-class.js","webpack:///../../../ecmwf/node_modules/linkifyjs/element.js","webpack:///../../../ecmwf/ecmwf/client/index.js","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify-element.js","webpack:///node_modules/webpack/buildin/global.js","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify.js","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify/utils/options.js","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify/core/scanner.js","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify/core/parser.js","webpack:///../../../ecmwf/node_modules/linkifyjs/lib/linkify/core/tokens/multi.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","inherits","parent","child","props","arguments","length","undefined","extended","constructor","AMPERSAND","CLOSEPAREN","CLOSEANGLEBRACKET","CLOSEBRACKET","CLOSEBRACE","OPENPAREN","OPENANGLEBRACKET","OPENBRACKET","OPENBRACE","WS","TLD","SYM","UNDERSCORE","SLASH","MAILTO","PROTOCOL","QUERY","POUND","PLUS","NUM","NL","LOCALHOST","PUNCTUATION","DOT","COLON","AT","DOMAIN","Base","_createTokenClass","_class","TextToken","createTokenClass","inheritsToken","v","toString","this","stateify","TokenState","CharacterState","BaseState","tClass","j","T","defaultTransition","on","symbol","state","Array","push","next","item","jump","test","accepts","emit","character","charOrRegExp","RegExp","token","tokenClass","str","start","endToken","defaultToken","len","newStates","nextState","default","__webpack_exports__","linkifyjs_element__WEBPACK_IMPORTED_MODULE_0__","linkifyjs_element__WEBPACK_IMPORTED_MODULE_0___default","$","document","ready","download_links","download_link","new_download_url","href","match","target","setTimeout","querySelectorAll","forEach","el","linkifyElement","w","gtm.start","Date","getTime","event","f","getElementsByTagName","createElement","async","src","parentNode","insertBefore","window","global","linkify","obj","newObj","_interopRequireWildcard","tokenize","options","Options","TEXT_TOKEN","parser","TOKENS","TEXT","HTML_NODE","TXT_NODE","replaceChildWithChildren","oldChild","newChildren","lastNewChild","replaceChild","tokensToNodes","tokens","opts","doc","result","_iterator","_isArray","isArray","_i","iterator","_ref","done","type","nl2br","isLink","check","_opts$resolve","resolve","formatted","formattedHref","tagName","className","events","attributes","link","setAttribute","attr","addEventListener","attachEvent","appendChild","createTextNode","linkifyElementHelper","element","nodeType","Error","ignoreTags","contains","childElement","firstChild","nodes","nodeValue","nextSibling","e","helper","normalize","g","Function","scanner","find","arg","run","filtered","toObject","_typeof","defaults","defaultProtocol","format","noop","formatHref","validate","linkAttributes","linkClass","ignoredTags","toUpperCase","val","arr","toHref","getObject","operator","optionValue","option","State","_state","_text","tlds","split","NUMBERS","ALPHANUM","WHITESPACE","domainStates","makeState","S_START","S_NUM","S_DOMAIN","S_DOMAIN_HYPHEN","S_WS","apply","partialProtocolFileStates","partialProtocolFtpStates","partialProtocolHttpStates","partialProtocolMailtoStates","S_PROTOCOL_FILE","pop","S_PROTOCOL_FTP","S_PROTOCOL_HTTP","S_MAILTO","S_PROTOCOL_SECURE","S_FULL_PROTOCOL","S_FULL_MAILTO","partialLocalhostStates","lowerStr","replace","toLowerCase","cursor","tokenLength","latestAccepting","sinceAccepts","TOKEN","substr","_multi","MULTI_TOKENS","S_PROTOCOL","S_PROTOCOL_SLASH","S_PROTOCOL_SLASH_SLASH","S_DOMAIN_DOT","S_TLD","URL","S_TLD_COLON","S_TLD_PORT","S_URL","S_URL_NON_ACCEPTING","S_URL_OPENBRACE","S_URL_OPENBRACKET","S_URL_OPENANGLEBRACKET","S_URL_OPENPAREN","S_URL_OPENBRACE_Q","S_URL_OPENBRACKET_Q","S_URL_OPENANGLEBRACKET_Q","S_URL_OPENPAREN_Q","S_URL_OPENBRACE_SYMS","S_URL_OPENBRACKET_SYMS","S_URL_OPENANGLEBRACKET_SYMS","S_URL_OPENPAREN_SYMS","S_EMAIL_DOMAIN","S_EMAIL_DOMAIN_DOT","S_EMAIL","EMAIL","S_EMAIL_COLON","S_EMAIL_PORT","S_MAILTO_EMAIL","MAILTOEMAIL","S_MAILTO_EMAIL_NON_ACCEPTING","S_LOCALPART","S_LOCALPART_AT","S_LOCALPART_DOT","S_NL","qsAccepting","qsNonAccepting","localpartAccepting","multis","textTokens","secondState","multiLength","MULTI","slice","isDomainToken","MultiToken","join","protocol","hasProtocol","hasSlashSlash"],"mappings":"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","file":"js/main.871c16f5.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/plugins/ecmwf/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","\"use strict\";\n\nexports.__esModule = true;\nexports.inherits = inherits;\nfunction inherits(parent, child) {\n\tvar props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\tvar extended = Object.create(parent.prototype);\n\tfor (var p in props) {\n\t\textended[p] = props[p];\n\t}\n\textended.constructor = child;\n\tchild.prototype = extended;\n\treturn child;\n}","'use strict';\n\nexports.__esModule = true;\nexports.AMPERSAND = exports.CLOSEPAREN = exports.CLOSEANGLEBRACKET = exports.CLOSEBRACKET = exports.CLOSEBRACE = exports.OPENPAREN = exports.OPENANGLEBRACKET = exports.OPENBRACKET = exports.OPENBRACE = exports.WS = exports.TLD = exports.SYM = exports.UNDERSCORE = exports.SLASH = exports.MAILTO = exports.PROTOCOL = exports.QUERY = exports.POUND = exports.PLUS = exports.NUM = exports.NL = exports.LOCALHOST = exports.PUNCTUATION = exports.DOT = exports.COLON = exports.AT = exports.DOMAIN = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\n/******************************************************************************\n\tText Tokens\n\tTokens composed of strings\n******************************************************************************/\n\n/**\n\tAbstract class used for manufacturing text tokens.\n\tPass in the value this token represents\n\n\t@class TextToken\n\t@abstract\n*/\nvar TextToken = (0, _createTokenClass.createTokenClass)();\nTextToken.prototype = {\n\ttoString: function toString() {\n\t\treturn this.v + '';\n\t}\n};\n\nfunction inheritsToken(value) {\n\tvar props = value ? { v: value } : {};\n\treturn (0, _class.inherits)(TextToken, (0, _createTokenClass.createTokenClass)(), props);\n}\n\n/**\n\tA valid domain token\n\t@class DOMAIN\n\t@extends TextToken\n*/\nvar DOMAIN = inheritsToken();\n\n/**\n\t@class AT\n\t@extends TextToken\n*/\nvar AT = inheritsToken('@');\n\n/**\n\tRepresents a single colon `:` character\n\n\t@class COLON\n\t@extends TextToken\n*/\nvar COLON = inheritsToken(':');\n\n/**\n\t@class DOT\n\t@extends TextToken\n*/\nvar DOT = inheritsToken('.');\n\n/**\n\tA character class that can surround the URL, but which the URL cannot begin\n\tor end with. Does not include certain English punctuation like parentheses.\n\n\t@class PUNCTUATION\n\t@extends TextToken\n*/\nvar PUNCTUATION = inheritsToken();\n\n/**\n\tThe word localhost (by itself)\n\t@class LOCALHOST\n\t@extends TextToken\n*/\nvar LOCALHOST = inheritsToken();\n\n/**\n\tNewline token\n\t@class NL\n\t@extends TextToken\n*/\nvar NL = inheritsToken('\\n');\n\n/**\n\t@class NUM\n\t@extends TextToken\n*/\nvar NUM = inheritsToken();\n\n/**\n\t@class PLUS\n\t@extends TextToken\n*/\nvar PLUS = inheritsToken('+');\n\n/**\n\t@class POUND\n\t@extends TextToken\n*/\nvar POUND = inheritsToken('#');\n\n/**\n\tRepresents a web URL protocol. Supported types include\n\n\t* `http:`\n\t* `https:`\n\t* `ftp:`\n\t* `ftps:`\n\n\t@class PROTOCOL\n\t@extends TextToken\n*/\nvar PROTOCOL = inheritsToken();\n\n/**\n\tRepresents the start of the email URI protocol\n\n\t@class MAILTO\n\t@extends TextToken\n*/\nvar MAILTO = inheritsToken('mailto:');\n\n/**\n\t@class QUERY\n\t@extends TextToken\n*/\nvar QUERY = inheritsToken('?');\n\n/**\n\t@class SLASH\n\t@extends TextToken\n*/\nvar SLASH = inheritsToken('/');\n\n/**\n\t@class UNDERSCORE\n\t@extends TextToken\n*/\nvar UNDERSCORE = inheritsToken('_');\n\n/**\n\tOne ore more non-whitespace symbol.\n\t@class SYM\n\t@extends TextToken\n*/\nvar SYM = inheritsToken();\n\n/**\n\t@class TLD\n\t@extends TextToken\n*/\nvar TLD = inheritsToken();\n\n/**\n\tRepresents a string of consecutive whitespace characters\n\n\t@class WS\n\t@extends TextToken\n*/\nvar WS = inheritsToken();\n\n/**\n\tOpening/closing bracket classes\n*/\n\nvar OPENBRACE = inheritsToken('{');\nvar OPENBRACKET = inheritsToken('[');\nvar OPENANGLEBRACKET = inheritsToken('<');\nvar OPENPAREN = inheritsToken('(');\nvar CLOSEBRACE = inheritsToken('}');\nvar CLOSEBRACKET = inheritsToken(']');\nvar CLOSEANGLEBRACKET = inheritsToken('>');\nvar CLOSEPAREN = inheritsToken(')');\n\nvar AMPERSAND = inheritsToken('&');\n\nexports.Base = TextToken;\nexports.DOMAIN = DOMAIN;\nexports.AT = AT;\nexports.COLON = COLON;\nexports.DOT = DOT;\nexports.PUNCTUATION = PUNCTUATION;\nexports.LOCALHOST = LOCALHOST;\nexports.NL = NL;\nexports.NUM = NUM;\nexports.PLUS = PLUS;\nexports.POUND = POUND;\nexports.QUERY = QUERY;\nexports.PROTOCOL = PROTOCOL;\nexports.MAILTO = MAILTO;\nexports.SLASH = SLASH;\nexports.UNDERSCORE = UNDERSCORE;\nexports.SYM = SYM;\nexports.TLD = TLD;\nexports.WS = WS;\nexports.OPENBRACE = OPENBRACE;\nexports.OPENBRACKET = OPENBRACKET;\nexports.OPENANGLEBRACKET = OPENANGLEBRACKET;\nexports.OPENPAREN = OPENPAREN;\nexports.CLOSEBRACE = CLOSEBRACE;\nexports.CLOSEBRACKET = CLOSEBRACKET;\nexports.CLOSEANGLEBRACKET = CLOSEANGLEBRACKET;\nexports.CLOSEPAREN = CLOSEPAREN;\nexports.AMPERSAND = AMPERSAND;","'use strict';\n\nexports.__esModule = true;\nexports.stateify = exports.TokenState = exports.CharacterState = undefined;\n\nvar _class = require('../utils/class');\n\nfunction createStateClass() {\n\treturn function (tClass) {\n\t\tthis.j = [];\n\t\tthis.T = tClass || null;\n\t};\n}\n\n/**\n\tA simple state machine that can emit token classes\n\n\tThe `j` property in this class refers to state jumps. It's a\n\tmultidimensional array where for each element:\n\n\t* index [0] is a symbol or class of symbols to transition to.\n\t* index [1] is a State instance which matches\n\n\tThe type of symbol will depend on the target implementation for this class.\n\tIn Linkify, we have a two-stage scanner. Each stage uses this state machine\n\tbut with a slighly different (polymorphic) implementation.\n\n\tThe `T` property refers to the token class.\n\n\tTODO: Can the `on` and `next` methods be combined?\n\n\t@class BaseState\n*/\nvar BaseState = createStateClass();\nBaseState.prototype = {\n\tdefaultTransition: false,\n\n\t/**\n \t@method constructor\n \t@param {Class} tClass Pass in the kind of token to emit if there are\n \t\tno jumps after this state and the state is accepting.\n */\n\n\t/**\n \tOn the given symbol(s), this machine should go to the given state\n \t\t@method on\n \t@param {Array|Mixed} symbol\n \t@param {BaseState} state Note that the type of this state should be the\n \t\tsame as the current instance (i.e., don't pass in a different\n \t\tsubclass)\n */\n\ton: function on(symbol, state) {\n\t\tif (symbol instanceof Array) {\n\t\t\tfor (var i = 0; i < symbol.length; i++) {\n\t\t\t\tthis.j.push([symbol[i], state]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tthis.j.push([symbol, state]);\n\t\treturn this;\n\t},\n\n\n\t/**\n \tGiven the next item, returns next state for that item\n \t@method next\n \t@param {Mixed} item Should be an instance of the symbols handled by\n \t\tthis particular machine.\n \t@return {State} state Returns false if no jumps are available\n */\n\tnext: function next(item) {\n\t\tfor (var i = 0; i < this.j.length; i++) {\n\t\t\tvar jump = this.j[i];\n\t\t\tvar symbol = jump[0]; // Next item to check for\n\t\t\tvar state = jump[1]; // State to jump to if items match\n\n\t\t\t// compare item with symbol\n\t\t\tif (this.test(item, symbol)) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\n\t\t// Nowhere left to jump!\n\t\treturn this.defaultTransition;\n\t},\n\n\n\t/**\n \tDoes this state accept?\n \t`true` only of `this.T` exists\n \t\t@method accepts\n \t@return {Boolean}\n */\n\taccepts: function accepts() {\n\t\treturn !!this.T;\n\t},\n\n\n\t/**\n \tDetermine whether a given item \"symbolizes\" the symbol, where symbol is\n \ta class of items handled by this state machine.\n \t\tThis method should be overriden in extended classes.\n \t\t@method test\n \t@param {Mixed} item Does this item match the given symbol?\n \t@param {Mixed} symbol\n \t@return {Boolean}\n */\n\ttest: function test(item, symbol) {\n\t\treturn item === symbol;\n\t},\n\n\n\t/**\n \tEmit the token for this State (just return it in this case)\n \tIf this emits a token, this instance is an accepting state\n \t@method emit\n \t@return {Class} T\n */\n\temit: function emit() {\n\t\treturn this.T;\n\t}\n};\n\n/**\n\tState machine for string-based input\n\n\t@class CharacterState\n\t@extends BaseState\n*/\nvar CharacterState = (0, _class.inherits)(BaseState, createStateClass(), {\n\t/**\n \tDoes the given character match the given character or regular\n \texpression?\n \t\t@method test\n \t@param {String} char\n \t@param {String|RegExp} charOrRegExp\n \t@return {Boolean}\n */\n\ttest: function test(character, charOrRegExp) {\n\t\treturn character === charOrRegExp || charOrRegExp instanceof RegExp && charOrRegExp.test(character);\n\t}\n});\n\n/**\n\tState machine for input in the form of TextTokens\n\n\t@class TokenState\n\t@extends BaseState\n*/\nvar TokenState = (0, _class.inherits)(BaseState, createStateClass(), {\n\n\t/**\n  * Similar to `on`, but returns the state the results in the transition from\n  * the given item\n  * @method jump\n  * @param {Mixed} item\n  * @param {Token} [token]\n  * @return state\n  */\n\tjump: function jump(token) {\n\t\tvar tClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\tvar state = this.next(new token('')); // dummy temp token\n\t\tif (state === this.defaultTransition) {\n\t\t\t// Make a new state!\n\t\t\tstate = new this.constructor(tClass);\n\t\t\tthis.on(token, state);\n\t\t} else if (tClass) {\n\t\t\tstate.T = tClass;\n\t\t}\n\t\treturn state;\n\t},\n\n\n\t/**\n \tIs the given token an instance of the given token class?\n \t\t@method test\n \t@param {TextToken} token\n \t@param {Class} tokenClass\n \t@return {Boolean}\n */\n\ttest: function test(token, tokenClass) {\n\t\treturn token instanceof tokenClass;\n\t}\n});\n\n/**\n\tGiven a non-empty target string, generates states (if required) for each\n\tconsecutive substring of characters in str starting from the beginning of\n\tthe string. The final state will have a special value, as specified in\n\toptions. All other \"in between\" substrings will have a default end state.\n\n\tThis turns the state machine into a Trie-like data structure (rather than a\n\tintelligently-designed DFA).\n\n\tNote that I haven't really tried these with any strings other than\n\tDOMAIN.\n\n\t@param {String} str\n\t@param {CharacterState} start State to jump from the first character\n\t@param {Class} endToken Token class to emit when the given string has been\n\t\tmatched and no more jumps exist.\n\t@param {Class} defaultToken \"Filler token\", or which token type to emit when\n\t\twe don't have a full match\n\t@return {Array} list of newly-created states\n*/\nfunction stateify(str, start, endToken, defaultToken) {\n\tvar i = 0,\n\t    len = str.length,\n\t    state = start,\n\t    newStates = [],\n\t    nextState = void 0;\n\n\t// Find the next state without a jump to the next character\n\twhile (i < len && (nextState = state.next(str[i]))) {\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tif (i >= len) {\n\t\treturn [];\n\t} // no new tokens were added\n\n\twhile (i < len - 1) {\n\t\tnextState = new CharacterState(defaultToken);\n\t\tnewStates.push(nextState);\n\t\tstate.on(str[i], nextState);\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tnextState = new CharacterState(endToken);\n\tnewStates.push(nextState);\n\tstate.on(str[len - 1], nextState);\n\n\treturn newStates;\n}\n\nexports.CharacterState = CharacterState;\nexports.TokenState = TokenState;\nexports.stateify = stateify;","\"use strict\";\n\nexports.__esModule = true;\nfunction createTokenClass() {\n\treturn function (value) {\n\t\tif (value) {\n\t\t\tthis.v = value;\n\t\t}\n\t};\n}\n\nexports.createTokenClass = createTokenClass;","module.exports = require('./lib/linkify-element').default;\n","import linkifyElement from \"linkifyjs/element\";\n\nimport \"./global.scss\";\nimport \"./timetable.scss\";\nimport \"./timetable_print.scss\";\nimport \"./ecmwf.scss\";\n\n// Point the abstract pdf generation link inside the \"Call for Abstracts\" menu\n// in the management area to our custom abstract html page\n$(document).ready(function() {\n  var download_links = $('a[href$=\"book-of-abstracts.pdf\"]').get();\n  if (download_links.length > 0) {\n    var download_link = download_links[0];\n    var regex = /event\\/(\\d+)\\/book-of-abstracts\\.pdf/;\n    var event_id = download_link.href.match(regex)[1];\n    var new_download_url = \"/ecmwf\" + \"/event/\" + event_id + \"/abstracts\";\n    download_link.href = new_download_url;\n    download_link.target = \"_blank\";\n  }\n});\n\n// Turn text into links inside the registration form\n$(document).ready(function() {\n  function linkifyForm() {\n    document.querySelectorAll(\"span.ng-binding\").forEach(el => linkifyElement(el));\n  }\n  // The form is rendered on the frontend and we need to wait around 2 second before the element exist\n  setTimeout(linkifyForm, 2000);\n});\n\n// Google analytics\n(function(w, d, s, l, i) {\n  w[l] = w[l] || [];\n  w[l].push({\n    \"gtm.start\": new Date().getTime(),\n    event: \"gtm.js\"\n  });\n  var f = d.getElementsByTagName(s)[0],\n    j = d.createElement(s),\n    dl = l != \"dataLayer\" ? \"&l=\" + l : \"\";\n  j.async = true;\n  j.src = \"//www.googletagmanager.com/gtm.js?id=\" + i + dl;\n  f.parentNode.insertBefore(j, f);\n})(window, document, \"script\", \"dataLayer\", \"GTM-P5T597\");\n","'use strict';\n\nexports.__esModule = true;\n\nvar _linkify = require('./linkify');\n\nvar linkify = _interopRequireWildcard(_linkify);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar tokenize = linkify.tokenize,\n    options = linkify.options; /**\n                               \tLinkify a HTML DOM node\n                               */\n\nvar Options = options.Options;\n\n\nvar TEXT_TOKEN = linkify.parser.TOKENS.TEXT;\n\nvar HTML_NODE = 1,\n    TXT_NODE = 3;\n\n/**\n\tGiven a parent element and child node that the parent contains, replaces\n\tthat child with the given array of new children\n*/\nfunction replaceChildWithChildren(parent, oldChild, newChildren) {\n\tvar lastNewChild = newChildren[newChildren.length - 1];\n\tparent.replaceChild(lastNewChild, oldChild);\n\tfor (var i = newChildren.length - 2; i >= 0; i--) {\n\t\tparent.insertBefore(newChildren[i], lastNewChild);\n\t\tlastNewChild = newChildren[i];\n\t}\n}\n\n/**\n\tGiven an array of MultiTokens, return an array of Nodes that are either\n\t(a) Plain Text nodes (node type 3)\n\t(b) Anchor tag nodes (usually, unless tag name is overridden in the options)\n\n\tTakes the same options as linkifyElement and an optional doc element\n\t(this should be passed in by linkifyElement)\n*/\nfunction tokensToNodes(tokens, opts, doc) {\n\tvar result = [];\n\n\tfor (var _iterator = tokens, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar token = _ref;\n\n\t\tif (token.type === 'nl' && opts.nl2br) {\n\t\t\tresult.push(doc.createElement('br'));\n\t\t\tcontinue;\n\t\t} else if (!token.isLink || !opts.check(token)) {\n\t\t\tresult.push(doc.createTextNode(token.toString()));\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar _opts$resolve = opts.resolve(token),\n\t\t    formatted = _opts$resolve.formatted,\n\t\t    formattedHref = _opts$resolve.formattedHref,\n\t\t    tagName = _opts$resolve.tagName,\n\t\t    className = _opts$resolve.className,\n\t\t    target = _opts$resolve.target,\n\t\t    events = _opts$resolve.events,\n\t\t    attributes = _opts$resolve.attributes;\n\n\t\t// Build the link\n\n\n\t\tvar link = doc.createElement(tagName);\n\t\tlink.setAttribute('href', formattedHref);\n\n\t\tif (className) {\n\t\t\tlink.setAttribute('class', className);\n\t\t}\n\n\t\tif (target) {\n\t\t\tlink.setAttribute('target', target);\n\t\t}\n\n\t\t// Build up additional attributes\n\t\tif (attributes) {\n\t\t\tfor (var attr in attributes) {\n\t\t\t\tlink.setAttribute(attr, attributes[attr]);\n\t\t\t}\n\t\t}\n\n\t\tif (events) {\n\t\t\tfor (var event in events) {\n\t\t\t\tif (link.addEventListener) {\n\t\t\t\t\tlink.addEventListener(event, events[event]);\n\t\t\t\t} else if (link.attachEvent) {\n\t\t\t\t\tlink.attachEvent('on' + event, events[event]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlink.appendChild(doc.createTextNode(formatted));\n\t\tresult.push(link);\n\t}\n\n\treturn result;\n}\n\n// Requires document.createElement\nfunction linkifyElementHelper(element, opts, doc) {\n\n\t// Can the element be linkified?\n\tif (!element || element.nodeType !== HTML_NODE) {\n\t\tthrow new Error('Cannot linkify ' + element + ' - Invalid DOM Node type');\n\t}\n\n\tvar ignoreTags = opts.ignoreTags;\n\n\t// Is this element already a link?\n\tif (element.tagName === 'A' || options.contains(ignoreTags, element.tagName)) {\n\t\t// No need to linkify\n\t\treturn element;\n\t}\n\n\tvar childElement = element.firstChild;\n\n\twhile (childElement) {\n\t\tvar str = void 0,\n\t\t    tokens = void 0,\n\t\t    nodes = void 0;\n\n\t\tswitch (childElement.nodeType) {\n\t\t\tcase HTML_NODE:\n\t\t\t\tlinkifyElementHelper(childElement, opts, doc);\n\t\t\t\tbreak;\n\t\t\tcase TXT_NODE:\n\t\t\t\t{\n\t\t\t\t\tstr = childElement.nodeValue;\n\t\t\t\t\ttokens = tokenize(str);\n\n\t\t\t\t\tif (tokens.length === 0 || tokens.length === 1 && tokens[0] instanceof TEXT_TOKEN) {\n\t\t\t\t\t\t// No node replacement required\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tnodes = tokensToNodes(tokens, opts, doc);\n\n\t\t\t\t\t// Swap out the current child for the set of nodes\n\t\t\t\t\treplaceChildWithChildren(element, childElement, nodes);\n\n\t\t\t\t\t// so that the correct sibling is selected next\n\t\t\t\t\tchildElement = nodes[nodes.length - 1];\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\n\t\tchildElement = childElement.nextSibling;\n\t}\n\n\treturn element;\n}\n\nfunction linkifyElement(element, opts) {\n\tvar doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n\n\ttry {\n\t\tdoc = doc || document || window && window.document || global && global.document;\n\t} catch (e) {/* do nothing for now */}\n\n\tif (!doc) {\n\t\tthrow new Error('Cannot find document implementation. ' + 'If you are in a non-browser environment like Node.js, ' + 'pass the document implementation as the third argument to linkifyElement.');\n\t}\n\n\topts = new Options(opts);\n\treturn linkifyElementHelper(element, opts, doc);\n}\n\n// Maintain reference to the recursive helper to cache option-normalization\nlinkifyElement.helper = linkifyElementHelper;\nlinkifyElement.normalize = function (opts) {\n\treturn new Options(opts);\n};\n\nexports.default = linkifyElement;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nexports.__esModule = true;\nexports.tokenize = exports.test = exports.scanner = exports.parser = exports.options = exports.inherits = exports.find = undefined;\n\nvar _class = require('./linkify/utils/class');\n\nvar _options = require('./linkify/utils/options');\n\nvar options = _interopRequireWildcard(_options);\n\nvar _scanner = require('./linkify/core/scanner');\n\nvar scanner = _interopRequireWildcard(_scanner);\n\nvar _parser = require('./linkify/core/parser');\n\nvar parser = _interopRequireWildcard(_parser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nif (!Array.isArray) {\n\tArray.isArray = function (arg) {\n\t\treturn Object.prototype.toString.call(arg) === '[object Array]';\n\t};\n}\n\n/**\n\tConverts a string into tokens that represent linkable and non-linkable bits\n\t@method tokenize\n\t@param {String} str\n\t@return {Array} tokens\n*/\nvar tokenize = function tokenize(str) {\n\treturn parser.run(scanner.run(str));\n};\n\n/**\n\tReturns a list of linkable items in the given string.\n*/\nvar find = function find(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\tvar filtered = [];\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\t\tif (token.isLink && (!type || token.type === type)) {\n\t\t\tfiltered.push(token.toObject());\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\n/**\n\tIs the given string valid linkable text of some sort\n\tNote that this does not trim the text for you.\n\n\tOptionally pass in a second `type` param, which is the type of link to test\n\tfor.\n\n\tFor example,\n\n\t\ttest(str, 'email');\n\n\tWill return `true` if str is a valid email.\n*/\nvar test = function test(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\treturn tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].type === type);\n};\n\n// Scanner and parser provide states and tokens for the lexicographic stage\n// (will be used to add additional link types)\nexports.find = find;\nexports.inherits = _class.inherits;\nexports.options = options;\nexports.parser = parser;\nexports.scanner = scanner;\nexports.test = test;\nexports.tokenize = tokenize;","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar defaults = {\n\tdefaultProtocol: 'http',\n\tevents: null,\n\tformat: noop,\n\tformatHref: noop,\n\tnl2br: false,\n\ttagName: 'a',\n\ttarget: typeToTarget,\n\tvalidate: true,\n\tignoreTags: [],\n\tattributes: null,\n\tclassName: 'linkified' // Deprecated value - no default class will be provided in the future\n};\n\nexports.defaults = defaults;\nexports.Options = Options;\nexports.contains = contains;\n\n\nfunction Options(opts) {\n\topts = opts || {};\n\n\tthis.defaultProtocol = opts.hasOwnProperty('defaultProtocol') ? opts.defaultProtocol : defaults.defaultProtocol;\n\tthis.events = opts.hasOwnProperty('events') ? opts.events : defaults.events;\n\tthis.format = opts.hasOwnProperty('format') ? opts.format : defaults.format;\n\tthis.formatHref = opts.hasOwnProperty('formatHref') ? opts.formatHref : defaults.formatHref;\n\tthis.nl2br = opts.hasOwnProperty('nl2br') ? opts.nl2br : defaults.nl2br;\n\tthis.tagName = opts.hasOwnProperty('tagName') ? opts.tagName : defaults.tagName;\n\tthis.target = opts.hasOwnProperty('target') ? opts.target : defaults.target;\n\tthis.validate = opts.hasOwnProperty('validate') ? opts.validate : defaults.validate;\n\tthis.ignoreTags = [];\n\n\t// linkAttributes and linkClass is deprecated\n\tthis.attributes = opts.attributes || opts.linkAttributes || defaults.attributes;\n\tthis.className = opts.hasOwnProperty('className') ? opts.className : opts.linkClass || defaults.className;\n\n\t// Make all tags names upper case\n\tvar ignoredTags = opts.hasOwnProperty('ignoreTags') ? opts.ignoreTags : defaults.ignoreTags;\n\tfor (var i = 0; i < ignoredTags.length; i++) {\n\t\tthis.ignoreTags.push(ignoredTags[i].toUpperCase());\n\t}\n}\n\nOptions.prototype = {\n\t/**\n  * Given the token, return all options for how it should be displayed\n  */\n\tresolve: function resolve(token) {\n\t\tvar href = token.toHref(this.defaultProtocol);\n\t\treturn {\n\t\t\tformatted: this.get('format', token.toString(), token),\n\t\t\tformattedHref: this.get('formatHref', href, token),\n\t\t\ttagName: this.get('tagName', href, token),\n\t\t\tclassName: this.get('className', href, token),\n\t\t\ttarget: this.get('target', href, token),\n\t\t\tevents: this.getObject('events', href, token),\n\t\t\tattributes: this.getObject('attributes', href, token)\n\t\t};\n\t},\n\n\n\t/**\n  * Returns true or false based on whether a token should be displayed as a\n  * link based on the user options. By default,\n  */\n\tcheck: function check(token) {\n\t\treturn this.get('validate', token.toString(), token);\n\t},\n\n\n\t// Private methods\n\n\t/**\n  * Resolve an option's value based on the value of the option and the given\n  * params.\n  * @param {String} key Name of option to use\n  * @param operator will be passed to the target option if it's method\n  * @param {MultiToken} token The token from linkify.tokenize\n  */\n\tget: function get(key, operator, token) {\n\t\tvar optionValue = void 0,\n\t\t    option = this[key];\n\t\tif (!option) {\n\t\t\treturn option;\n\t\t}\n\n\t\tswitch (typeof option === 'undefined' ? 'undefined' : _typeof(option)) {\n\t\t\tcase 'function':\n\t\t\t\treturn option(operator, token.type);\n\t\t\tcase 'object':\n\t\t\t\toptionValue = option.hasOwnProperty(token.type) ? option[token.type] : defaults[key];\n\t\t\t\treturn typeof optionValue === 'function' ? optionValue(operator, token.type) : optionValue;\n\t\t}\n\n\t\treturn option;\n\t},\n\tgetObject: function getObject(key, operator, token) {\n\t\tvar option = this[key];\n\t\treturn typeof option === 'function' ? option(operator, token.type) : option;\n\t}\n};\n\n/**\n * Quick indexOf replacement for checking the ignoreTags option\n */\nfunction contains(arr, value) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (arr[i] === value) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction noop(val) {\n\treturn val;\n}\n\nfunction typeToTarget(href, type) {\n\treturn type === 'url' ? '_blank' : null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _text = require('./tokens/text');\n\nvar TOKENS = _interopRequireWildcard(_text);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar tlds = 'aaa|aarp|abarth|abb|abbott|abbvie|abc|able|abogado|abudhabi|ac|academy|accenture|accountant|accountants|aco|active|actor|ad|adac|ads|adult|ae|aeg|aero|aetna|af|afamilycompany|afl|africa|ag|agakhan|agency|ai|aig|aigo|airbus|airforce|airtel|akdn|al|alfaromeo|alibaba|alipay|allfinanz|allstate|ally|alsace|alstom|am|americanexpress|americanfamily|amex|amfam|amica|amsterdam|analytics|android|anquan|anz|ao|aol|apartments|app|apple|aq|aquarelle|ar|arab|aramco|archi|army|arpa|art|arte|as|asda|asia|associates|at|athleta|attorney|au|auction|audi|audible|audio|auspost|author|auto|autos|avianca|aw|aws|ax|axa|az|azure|ba|baby|baidu|banamex|bananarepublic|band|bank|bar|barcelona|barclaycard|barclays|barefoot|bargains|baseball|basketball|bauhaus|bayern|bb|bbc|bbt|bbva|bcg|bcn|bd|be|beats|beauty|beer|bentley|berlin|best|bestbuy|bet|bf|bg|bh|bharti|bi|bible|bid|bike|bing|bingo|bio|biz|bj|black|blackfriday|blanco|blockbuster|blog|bloomberg|blue|bm|bms|bmw|bn|bnl|bnpparibas|bo|boats|boehringer|bofa|bom|bond|boo|book|booking|boots|bosch|bostik|boston|bot|boutique|box|br|bradesco|bridgestone|broadway|broker|brother|brussels|bs|bt|budapest|bugatti|build|builders|business|buy|buzz|bv|bw|by|bz|bzh|ca|cab|cafe|cal|call|calvinklein|cam|camera|camp|cancerresearch|canon|capetown|capital|capitalone|car|caravan|cards|care|career|careers|cars|cartier|casa|case|caseih|cash|casino|cat|catering|catholic|cba|cbn|cbre|cbs|cc|cd|ceb|center|ceo|cern|cf|cfa|cfd|cg|ch|chanel|channel|chase|chat|cheap|chintai|chloe|christmas|chrome|chrysler|church|ci|cipriani|circle|cisco|citadel|citi|citic|city|cityeats|ck|cl|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|cm|cn|co|coach|codes|coffee|college|cologne|com|comcast|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cookingchannel|cool|coop|corsica|country|coupon|coupons|courses|cr|credit|creditcard|creditunion|cricket|crown|crs|cruise|cruises|csc|cu|cuisinella|cv|cw|cx|cy|cymru|cyou|cz|dabur|dad|dance|data|date|dating|datsun|day|dclk|dds|de|deal|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|dhl|diamonds|diet|digital|direct|directory|discount|discover|dish|diy|dj|dk|dm|dnp|do|docs|doctor|dodge|dog|doha|domains|dot|download|drive|dtv|dubai|duck|dunlop|duns|dupont|durban|dvag|dvr|dz|earth|eat|ec|eco|edeka|edu|education|ee|eg|email|emerck|energy|engineer|engineering|enterprises|epost|epson|equipment|er|ericsson|erni|es|esq|estate|esurance|et|etisalat|eu|eurovision|eus|events|everbank|exchange|expert|exposed|express|extraspace|fage|fail|fairwinds|faith|family|fan|fans|farm|farmers|fashion|fast|fedex|feedback|ferrari|ferrero|fi|fiat|fidelity|fido|film|final|finance|financial|fire|firestone|firmdale|fish|fishing|fit|fitness|fj|fk|flickr|flights|flir|florist|flowers|fly|fm|fo|foo|food|foodnetwork|football|ford|forex|forsale|forum|foundation|fox|fr|free|fresenius|frl|frogans|frontdoor|frontier|ftr|fujitsu|fujixerox|fun|fund|furniture|futbol|fyi|ga|gal|gallery|gallo|gallup|game|games|gap|garden|gb|gbiz|gd|gdn|ge|gea|gent|genting|george|gf|gg|ggee|gh|gi|gift|gifts|gives|giving|gl|glade|glass|gle|global|globo|gm|gmail|gmbh|gmo|gmx|gn|godaddy|gold|goldpoint|golf|goo|goodhands|goodyear|goog|google|gop|got|gov|gp|gq|gr|grainger|graphics|gratis|green|gripe|grocery|group|gs|gt|gu|guardian|gucci|guge|guide|guitars|guru|gw|gy|hair|hamburg|hangout|haus|hbo|hdfc|hdfcbank|health|healthcare|help|helsinki|here|hermes|hgtv|hiphop|hisamitsu|hitachi|hiv|hk|hkt|hm|hn|hockey|holdings|holiday|homedepot|homegoods|homes|homesense|honda|honeywell|horse|hospital|host|hosting|hot|hoteles|hotels|hotmail|house|how|hr|hsbc|ht|htc|hu|hughes|hyatt|hyundai|ibm|icbc|ice|icu|id|ie|ieee|ifm|ikano|il|im|imamat|imdb|immo|immobilien|in|industries|infiniti|info|ing|ink|institute|insurance|insure|int|intel|international|intuit|investments|io|ipiranga|iq|ir|irish|is|iselect|ismaili|ist|istanbul|it|itau|itv|iveco|iwc|jaguar|java|jcb|jcp|je|jeep|jetzt|jewelry|jio|jlc|jll|jm|jmp|jnj|jo|jobs|joburg|jot|joy|jp|jpmorgan|jprs|juegos|juniper|kaufen|kddi|ke|kerryhotels|kerrylogistics|kerryproperties|kfh|kg|kh|ki|kia|kim|kinder|kindle|kitchen|kiwi|km|kn|koeln|komatsu|kosher|kp|kpmg|kpn|kr|krd|kred|kuokgroup|kw|ky|kyoto|kz|la|lacaixa|ladbrokes|lamborghini|lamer|lancaster|lancia|lancome|land|landrover|lanxess|lasalle|lat|latino|latrobe|law|lawyer|lb|lc|lds|lease|leclerc|lefrak|legal|lego|lexus|lgbt|li|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|lilly|limited|limo|lincoln|linde|link|lipsy|live|living|lixil|lk|loan|loans|locker|locus|loft|lol|london|lotte|lotto|love|lpl|lplfinancial|lr|ls|lt|ltd|ltda|lu|lundbeck|lupin|luxe|luxury|lv|ly|ma|macys|madrid|maif|maison|makeup|man|management|mango|map|market|marketing|markets|marriott|marshalls|maserati|mattel|mba|mc|mckinsey|md|me|med|media|meet|melbourne|meme|memorial|men|menu|meo|merckmsd|metlife|mg|mh|miami|microsoft|mil|mini|mint|mit|mitsubishi|mk|ml|mlb|mls|mm|mma|mn|mo|mobi|mobile|mobily|moda|moe|moi|mom|monash|money|monster|mopar|mormon|mortgage|moscow|moto|motorcycles|mov|movie|movistar|mp|mq|mr|ms|msd|mt|mtn|mtr|mu|museum|mutual|mv|mw|mx|my|mz|na|nab|nadex|nagoya|name|nationwide|natura|navy|nba|nc|ne|nec|net|netbank|netflix|network|neustar|new|newholland|news|next|nextdirect|nexus|nf|nfl|ng|ngo|nhk|ni|nico|nike|nikon|ninja|nissan|nissay|nl|no|nokia|northwesternmutual|norton|now|nowruz|nowtv|np|nr|nra|nrw|ntt|nu|nyc|nz|obi|observer|off|office|okinawa|olayan|olayangroup|oldnavy|ollo|om|omega|one|ong|onl|online|onyourside|ooo|open|oracle|orange|org|organic|origins|osaka|otsuka|ott|ovh|pa|page|panasonic|panerai|paris|pars|partners|parts|party|passagens|pay|pccw|pe|pet|pf|pfizer|pg|ph|pharmacy|phd|philips|phone|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pioneer|pizza|pk|pl|place|play|playstation|plumbing|plus|pm|pn|pnc|pohl|poker|politie|porn|post|pr|pramerica|praxi|press|prime|pro|prod|productions|prof|progressive|promo|properties|property|protection|pru|prudential|ps|pt|pub|pw|pwc|py|qa|qpon|quebec|quest|qvc|racing|radio|raid|re|read|realestate|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|reliance|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|richardli|ricoh|rightathome|ril|rio|rip|rmit|ro|rocher|rocks|rodeo|rogers|room|rs|rsvp|ru|rugby|ruhr|run|rw|rwe|ryukyu|sa|saarland|safe|safety|sakura|sale|salon|samsclub|samsung|sandvik|sandvikcoromant|sanofi|sap|sapo|sarl|sas|save|saxo|sb|sbi|sbs|sc|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scjohnson|scor|scot|sd|se|search|seat|secure|security|seek|select|sener|services|ses|seven|sew|sex|sexy|sfr|sg|sh|shangrila|sharp|shaw|shell|shia|shiksha|shoes|shop|shopping|shouji|show|showtime|shriram|si|silk|sina|singles|site|sj|sk|ski|skin|sky|skype|sl|sling|sm|smart|smile|sn|sncf|so|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|space|spiegel|spot|spreadbetting|sr|srl|srt|st|stada|staples|star|starhub|statebank|statefarm|statoil|stc|stcgroup|stockholm|storage|store|stream|studio|study|style|su|sucks|supplies|supply|support|surf|surgery|suzuki|sv|swatch|swiftcover|swiss|sx|sy|sydney|symantec|systems|sz|tab|taipei|talk|taobao|target|tatamotors|tatar|tattoo|tax|taxi|tc|tci|td|tdk|team|tech|technology|tel|telecity|telefonica|temasek|tennis|teva|tf|tg|th|thd|theater|theatre|tiaa|tickets|tienda|tiffany|tips|tires|tirol|tj|tjmaxx|tjx|tk|tkmaxx|tl|tm|tmall|tn|to|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|tr|trade|trading|training|travel|travelchannel|travelers|travelersinsurance|trust|trv|tt|tube|tui|tunes|tushu|tv|tvs|tw|tz|ua|ubank|ubs|uconnect|ug|uk|unicom|university|uno|uol|ups|us|uy|uz|va|vacations|vana|vanguard|vc|ve|vegas|ventures|verisign|versicherung|vet|vg|vi|viajes|video|vig|viking|villas|vin|vip|virgin|visa|vision|vista|vistaprint|viva|vivo|vlaanderen|vn|vodka|volkswagen|volvo|vote|voting|voto|voyage|vu|vuelos|wales|walmart|walter|wang|wanggou|warman|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weibo|weir|wf|whoswho|wien|wiki|williamhill|win|windows|wine|winners|wme|wolterskluwer|woodside|work|works|world|wow|ws|wtc|wtf|xbox|xerox|xfinity|xihuan|xin|xn--11b4c3d|xn--1ck2e1b|xn--1qqw23a|xn--2scrj9c|xn--30rr7y|xn--3bst00m|xn--3ds443g|xn--3e0b707e|xn--3hcrj9c|xn--3oq18vl8pn36a|xn--3pxu8k|xn--42c2d9a|xn--45br5cyl|xn--45brj9c|xn--45q11c|xn--4gbrim|xn--54b7fta0cc|xn--55qw42g|xn--55qx5d|xn--5su34j936bgsg|xn--5tzm5g|xn--6frz82g|xn--6qq986b3xl|xn--80adxhks|xn--80ao21a|xn--80aqecdr1a|xn--80asehdb|xn--80aswg|xn--8y0a063a|xn--90a3ac|xn--90ae|xn--90ais|xn--9dbq2a|xn--9et52u|xn--9krt00a|xn--b4w605ferd|xn--bck1b9a5dre4c|xn--c1avg|xn--c2br7g|xn--cck2b3b|xn--cg4bki|xn--clchc0ea0b2g2a9gcd|xn--czr694b|xn--czrs0t|xn--czru2d|xn--d1acj3b|xn--d1alf|xn--e1a4c|xn--eckvdtc9d|xn--efvy88h|xn--estv75g|xn--fct429k|xn--fhbei|xn--fiq228c5hs|xn--fiq64b|xn--fiqs8s|xn--fiqz9s|xn--fjq720a|xn--flw351e|xn--fpcrj9c3d|xn--fzc2c9e2c|xn--fzys8d69uvgm|xn--g2xx48c|xn--gckr3f0f|xn--gecrj9c|xn--gk3at1e|xn--h2breg3eve|xn--h2brj9c|xn--h2brj9c8c|xn--hxt814e|xn--i1b6b1a6a2e|xn--imr513n|xn--io0a7i|xn--j1aef|xn--j1amh|xn--j6w193g|xn--jlq61u9w7b|xn--jvr189m|xn--kcrx77d1x4a|xn--kprw13d|xn--kpry57d|xn--kpu716f|xn--kput3i|xn--l1acc|xn--lgbbat1ad8j|xn--mgb9awbf|xn--mgba3a3ejt|xn--mgba3a4f16a|xn--mgba7c0bbn0a|xn--mgbaakc7dvf|xn--mgbaam7a8h|xn--mgbab2bd|xn--mgbai9azgqp6j|xn--mgbayh7gpa|xn--mgbb9fbpob|xn--mgbbh1a|xn--mgbbh1a71e|xn--mgbc0a9azcg|xn--mgbca7dzdo|xn--mgberp4a5d4ar|xn--mgbgu82a|xn--mgbi4ecexp|xn--mgbpl2fh|xn--mgbt3dhd|xn--mgbtx2b|xn--mgbx4cd0ab|xn--mix891f|xn--mk1bu44c|xn--mxtq1m|xn--ngbc5azd|xn--ngbe9e0a|xn--ngbrx|xn--node|xn--nqv7f|xn--nqv7fs00ema|xn--nyqy26a|xn--o3cw4h|xn--ogbpf8fl|xn--p1acf|xn--p1ai|xn--pbt977c|xn--pgbs0dh|xn--pssy2u|xn--q9jyb4c|xn--qcka1pmc|xn--qxam|xn--rhqv96g|xn--rovu88b|xn--rvc1e0am3e|xn--s9brj9c|xn--ses554g|xn--t60b56a|xn--tckwe|xn--tiq49xqyj|xn--unup4y|xn--vermgensberater-ctb|xn--vermgensberatung-pwb|xn--vhquv|xn--vuq861b|xn--w4r85el8fhu5dnra|xn--w4rs40l|xn--wgbh1c|xn--wgbl6a|xn--xhq521b|xn--xkc2al3hye2a|xn--xkc2dl3a5ee0h|xn--y9a3aq|xn--yfro4i67o|xn--ygbi2ammx|xn--zfr164b|xperia|xxx|xyz|yachts|yahoo|yamaxun|yandex|ye|yodobashi|yoga|yokohama|you|youtube|yt|yun|za|zappos|zara|zero|zip|zippo|zm|zone|zuerich|zw'.split('|'); // macro, see gulpfile.js\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n\n\t@module linkify\n\t@submodule scanner\n\t@main scanner\n*/\n\nvar NUMBERS = '0123456789'.split('');\nvar ALPHANUM = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\nvar WHITESPACE = [' ', '\\f', '\\r', '\\t', '\\v', '\\xA0', '\\u1680', '\\u180E']; // excluding line breaks\n\nvar domainStates = []; // states that jump to DOMAIN on /[a-z0-9]/\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.CharacterState(tokenClass);\n};\n\n// Frequently used states\nvar S_START = makeState();\nvar S_NUM = makeState(_text.NUM);\nvar S_DOMAIN = makeState(_text.DOMAIN);\nvar S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters\nvar S_WS = makeState(_text.WS);\n\n// States for special URL symbols\nS_START.on('@', makeState(_text.AT)).on('.', makeState(_text.DOT)).on('+', makeState(_text.PLUS)).on('#', makeState(_text.POUND)).on('?', makeState(_text.QUERY)).on('/', makeState(_text.SLASH)).on('_', makeState(_text.UNDERSCORE)).on(':', makeState(_text.COLON)).on('{', makeState(_text.OPENBRACE)).on('[', makeState(_text.OPENBRACKET)).on('<', makeState(_text.OPENANGLEBRACKET)).on('(', makeState(_text.OPENPAREN)).on('}', makeState(_text.CLOSEBRACE)).on(']', makeState(_text.CLOSEBRACKET)).on('>', makeState(_text.CLOSEANGLEBRACKET)).on(')', makeState(_text.CLOSEPAREN)).on('&', makeState(_text.AMPERSAND)).on([',', ';', '!', '\"', '\\''], makeState(_text.PUNCTUATION));\n\n// Whitespace jumps\n// Tokens of only non-newline whitespace are arbitrarily long\nS_START.on('\\n', makeState(_text.NL)).on(WHITESPACE, S_WS);\n\n// If any whitespace except newline, more whitespace!\nS_WS.on(WHITESPACE, S_WS);\n\n// Generates states for top-level domains\n// Note that this is most accurate when tlds are in alphabetical order\nfor (var i = 0; i < tlds.length; i++) {\n\tvar newStates = (0, _state.stateify)(tlds[i], S_START, _text.TLD, _text.DOMAIN);\n\tdomainStates.push.apply(domainStates, newStates);\n}\n\n// Collect the states generated by different protocls\nvar partialProtocolFileStates = (0, _state.stateify)('file', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolFtpStates = (0, _state.stateify)('ftp', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolHttpStates = (0, _state.stateify)('http', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolMailtoStates = (0, _state.stateify)('mailto', S_START, _text.DOMAIN, _text.DOMAIN);\n\n// Add the states to the array of DOMAINeric states\ndomainStates.push.apply(domainStates, partialProtocolFileStates);\ndomainStates.push.apply(domainStates, partialProtocolFtpStates);\ndomainStates.push.apply(domainStates, partialProtocolHttpStates);\ndomainStates.push.apply(domainStates, partialProtocolMailtoStates);\n\n// Protocol states\nvar S_PROTOCOL_FILE = partialProtocolFileStates.pop();\nvar S_PROTOCOL_FTP = partialProtocolFtpStates.pop();\nvar S_PROTOCOL_HTTP = partialProtocolHttpStates.pop();\nvar S_MAILTO = partialProtocolMailtoStates.pop();\nvar S_PROTOCOL_SECURE = makeState(_text.DOMAIN);\nvar S_FULL_PROTOCOL = makeState(_text.PROTOCOL); // Full protocol ends with COLON\nvar S_FULL_MAILTO = makeState(_text.MAILTO); // Mailto ends with COLON\n\n// Secure protocols (end with 's')\nS_PROTOCOL_FTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\nS_PROTOCOL_HTTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\ndomainStates.push(S_PROTOCOL_SECURE);\n\n// Become protocol tokens after a COLON\nS_PROTOCOL_FILE.on(':', S_FULL_PROTOCOL);\nS_PROTOCOL_SECURE.on(':', S_FULL_PROTOCOL);\nS_MAILTO.on(':', S_FULL_MAILTO);\n\n// Localhost\nvar partialLocalhostStates = (0, _state.stateify)('localhost', S_START, _text.LOCALHOST, _text.DOMAIN);\ndomainStates.push.apply(domainStates, partialLocalhostStates);\n\n// Everything else\n// DOMAINs make more DOMAINs\n// Number and character transitions\nS_START.on(NUMBERS, S_NUM);\nS_NUM.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_NUM).on(ALPHANUM, S_DOMAIN); // number becomes DOMAIN\n\nS_DOMAIN.on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n\n// All the generated states should have a jump to DOMAIN\nfor (var _i = 0; _i < domainStates.length; _i++) {\n\tdomainStates[_i].on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n}\n\nS_DOMAIN_HYPHEN.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_DOMAIN).on(ALPHANUM, S_DOMAIN);\n\n// Set default transition\nS_START.defaultTransition = makeState(_text.SYM);\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {String} str Input string to scan\n\t@return {Array} Array of TOKEN instances\n*/\nvar run = function run(str) {\n\n\t// The state machine only looks at lowercase strings.\n\t// This selective `toLowerCase` is used because lowercasing the entire\n\t// string causes the length and character position to vary in some in some\n\t// non-English strings. This happens only on V8-based runtimes.\n\tvar lowerStr = str.replace(/[A-Z]/g, function (c) {\n\t\treturn c.toLowerCase();\n\t});\n\tvar len = str.length;\n\tvar tokens = []; // return value\n\n\tvar cursor = 0;\n\n\t// Tokenize the string\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar nextState = null;\n\t\tvar tokenLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && (nextState = state.next(lowerStr[cursor]))) {\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\ttokenLength++;\n\t\t\tcursor++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\t\t\tcontinue;\n\t\t} // Should never happen\n\n\t\t// Roll back to the latest accepting state\n\t\tcursor -= sinceAccepts;\n\t\ttokenLength -= sinceAccepts;\n\n\t\t// Get the class for the new token\n\t\tvar TOKEN = latestAccepting.emit(); // Current token class\n\n\t\t// No more jumps, just make a new token\n\t\ttokens.push(new TOKEN(str.substr(cursor - tokenLength, tokenLength)));\n\t}\n\n\treturn tokens;\n};\n\nvar start = S_START;\nexports.State = _state.CharacterState;\nexports.TOKENS = TOKENS;\nexports.run = run;\nexports.start = start;","'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _multi = require('./tokens/multi');\n\nvar MULTI_TOKENS = _interopRequireWildcard(_multi);\n\nvar _text = require('./tokens/text');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main parser\n*/\n\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.TokenState(tokenClass);\n};\n\n// The universal starting state.\nvar S_START = makeState();\n\n// Intermediate states for URLs. Note that domains that begin with a protocol\n// are treated slighly differently from those that don't.\nvar S_PROTOCOL = makeState(); // e.g., 'http:'\nvar S_MAILTO = makeState(); // 'mailto:'\nvar S_PROTOCOL_SLASH = makeState(); // e.g., '/', 'http:/''\nvar S_PROTOCOL_SLASH_SLASH = makeState(); // e.g., '//', 'http://'\nvar S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\nvar S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\nvar S_TLD = makeState(_multi.URL); // (A) Simplest possible URL with no query string\nvar S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\nvar S_TLD_PORT = makeState(_multi.URL); // TLD followed by a port number\nvar S_URL = makeState(_multi.URL); // Long URL with optional port and maybe query string\nvar S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\nvar S_URL_OPENBRACE = makeState(); // URL followed by {\nvar S_URL_OPENBRACKET = makeState(); // URL followed by [\nvar S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\nvar S_URL_OPENPAREN = makeState(); // URL followed by (\nvar S_URL_OPENBRACE_Q = makeState(_multi.URL); // URL followed by { and some symbols that the URL can end it\nvar S_URL_OPENBRACKET_Q = makeState(_multi.URL); // URL followed by [ and some symbols that the URL can end it\nvar S_URL_OPENANGLEBRACKET_Q = makeState(_multi.URL); // URL followed by < and some symbols that the URL can end it\nvar S_URL_OPENPAREN_Q = makeState(_multi.URL); // URL followed by ( and some symbols that the URL can end it\nvar S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\nvar S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\nvar S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\nvar S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\nvar S_EMAIL = makeState(_multi.EMAIL); // (C) Possible email address (could have more tlds)\nvar S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\nvar S_EMAIL_PORT = makeState(_multi.EMAIL); // (C) Email address with a port\nvar S_MAILTO_EMAIL = makeState(_multi.MAILTOEMAIL); // Email that begins with the mailto prefix (D)\nvar S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\nvar S_LOCALPART = makeState(); // Local part of the email address\nvar S_LOCALPART_AT = makeState(); // Local part of the email address plus @\nvar S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\nvar S_NL = makeState(_multi.NL); // single new line\n\n// Make path from start to protocol (with '//')\nS_START.on(_text.NL, S_NL).on(_text.PROTOCOL, S_PROTOCOL).on(_text.MAILTO, S_MAILTO).on(_text.SLASH, S_PROTOCOL_SLASH);\n\nS_PROTOCOL.on(_text.SLASH, S_PROTOCOL_SLASH);\nS_PROTOCOL_SLASH.on(_text.SLASH, S_PROTOCOL_SLASH_SLASH);\n\n// The very first potential domain name\nS_START.on(_text.TLD, S_DOMAIN).on(_text.DOMAIN, S_DOMAIN).on(_text.LOCALHOST, S_TLD).on(_text.NUM, S_DOMAIN);\n\n// Force URL for protocol followed by anything sane\nS_PROTOCOL_SLASH_SLASH.on(_text.TLD, S_URL).on(_text.DOMAIN, S_URL).on(_text.NUM, S_URL).on(_text.LOCALHOST, S_URL);\n\n// Account for dots and hyphens\n// hyphens are usually parts of domain names\nS_DOMAIN.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL_DOMAIN.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Hyphen can jump back to a domain name\n\n// After the first domain and a dot, we can find either a URL or another domain\nS_DOMAIN_DOT.on(_text.TLD, S_TLD).on(_text.DOMAIN, S_DOMAIN).on(_text.NUM, S_DOMAIN).on(_text.LOCALHOST, S_DOMAIN);\n\nS_EMAIL_DOMAIN_DOT.on(_text.TLD, S_EMAIL).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.NUM, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL_DOMAIN);\n\n// S_TLD accepts! But the URL could be longer, try to find a match greedily\n// The `run` function should be able to \"rollback\" to the accepting state\nS_TLD.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Become real URLs after `SLASH` or `COLON NUM SLASH`\n// Here PSS and non-PSS converge\nS_TLD.on(_text.COLON, S_TLD_COLON).on(_text.SLASH, S_URL);\nS_TLD_COLON.on(_text.NUM, S_TLD_PORT);\nS_TLD_PORT.on(_text.SLASH, S_URL);\nS_EMAIL.on(_text.COLON, S_EMAIL_COLON);\nS_EMAIL_COLON.on(_text.NUM, S_EMAIL_PORT);\n\n// Types of characters the URL can definitely end in\nvar qsAccepting = [_text.DOMAIN, _text.AT, _text.LOCALHOST, _text.NUM, _text.PLUS, _text.POUND, _text.PROTOCOL, _text.SLASH, _text.TLD, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND];\n\n// Types of tokens that can follow a URL and be part of the query string\n// but cannot be the very last characters\n// Characters that cannot appear in the URL at all should be excluded\nvar qsNonAccepting = [_text.COLON, _text.DOT, _text.QUERY, _text.PUNCTUATION, _text.CLOSEBRACE, _text.CLOSEBRACKET, _text.CLOSEANGLEBRACKET, _text.CLOSEPAREN, _text.OPENBRACE, _text.OPENBRACKET, _text.OPENANGLEBRACKET, _text.OPENPAREN];\n\n// These states are responsible primarily for determining whether or not to\n// include the final round bracket.\n\n// URL, followed by an opening bracket\nS_URL.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// URL with extra symbols at the end, followed by an opening bracket\nS_URL_NON_ACCEPTING.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// Closing bracket component. This character WILL be included in the URL\nS_URL_OPENBRACE.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_Q.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_Q.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_Q.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_Q.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_SYMS.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_SYMS.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_SYMS.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_SYMS.on(_text.CLOSEPAREN, S_URL);\n\n// URL that beings with an opening bracket, followed by a symbols.\n// Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n// has a single opening bracket for some reason).\nS_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// URL that begins with an opening bracket, followed by some symbols\nS_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);\n\nS_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// Account for the query string\nS_URL.on(qsAccepting, S_URL);\nS_URL_NON_ACCEPTING.on(qsAccepting, S_URL);\n\nS_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);\nS_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\n// Email address-specific state definitions\n// Note: We are not allowing '/' in email addresses since this would interfere\n// with real URLs\n\n// For addresses with the mailto prefix\n// 'mailto:' followed by anything sane is a valid email\nS_MAILTO.on(_text.TLD, S_MAILTO_EMAIL).on(_text.DOMAIN, S_MAILTO_EMAIL).on(_text.NUM, S_MAILTO_EMAIL).on(_text.LOCALHOST, S_MAILTO_EMAIL);\n\n// Greedily get more potential valid email values\nS_MAILTO_EMAIL.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\nS_MAILTO_EMAIL_NON_ACCEPTING.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\n// For addresses without the mailto prefix\n// Tokens allowed in the localpart of the email\nvar localpartAccepting = [_text.DOMAIN, _text.NUM, _text.PLUS, _text.POUND, _text.QUERY, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND, _text.TLD];\n\n// Some of the tokens in `localpartAccepting` are already accounted for here and\n// will not be overwritten (don't worry)\nS_DOMAIN.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_TLD.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);\n\n// Okay we're on a localpart. Now what?\n// TODO: IP addresses and what if the email starts with numbers?\nS_LOCALPART.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT) // close to an email address now\n.on(_text.DOT, S_LOCALPART_DOT);\nS_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);\nS_LOCALPART_AT.on(_text.TLD, S_EMAIL_DOMAIN).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL);\n// States following `@` defined above\n\nvar run = function run(tokens) {\n\tvar len = tokens.length;\n\tvar cursor = 0;\n\tvar multis = [];\n\tvar textTokens = [];\n\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar secondState = null;\n\t\tvar nextState = null;\n\t\tvar multiLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && !(secondState = state.next(tokens[cursor]))) {\n\t\t\t// Starting tokens with nowhere to jump to.\n\t\t\t// Consider these to be just plain text\n\t\t\ttextTokens.push(tokens[cursor++]);\n\t\t}\n\n\t\twhile (cursor < len && (nextState = secondState || state.next(tokens[cursor]))) {\n\n\t\t\t// Get the next state\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\tcursor++;\n\t\t\tmultiLength++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\n\t\t\t// No accepting state was found, part of a regular text token\n\t\t\t// Add all the tokens we looked at to the text tokens array\n\t\t\tfor (var i = cursor - multiLength; i < cursor; i++) {\n\t\t\t\ttextTokens.push(tokens[i]);\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Accepting state!\n\n\t\t\t// First close off the textTokens (if available)\n\t\t\tif (textTokens.length > 0) {\n\t\t\t\tmultis.push(new _multi.TEXT(textTokens));\n\t\t\t\ttextTokens = [];\n\t\t\t}\n\n\t\t\t// Roll back to the latest accepting state\n\t\t\tcursor -= sinceAccepts;\n\t\t\tmultiLength -= sinceAccepts;\n\n\t\t\t// Create a new multitoken\n\t\t\tvar MULTI = latestAccepting.emit();\n\t\t\tmultis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));\n\t\t}\n\t}\n\n\t// Finally close off the textTokens (if available)\n\tif (textTokens.length > 0) {\n\t\tmultis.push(new _multi.TEXT(textTokens));\n\t}\n\n\treturn multis;\n};\n\nexports.State = _state.TokenState;\nexports.TOKENS = MULTI_TOKENS;\nexports.run = run;\nexports.start = S_START;","'use strict';\n\nexports.__esModule = true;\nexports.URL = exports.TEXT = exports.NL = exports.EMAIL = exports.MAILTOEMAIL = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\nvar _text = require('./text');\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n// Is the given token a valid domain token?\n// Should nums be included here?\nfunction isDomainToken(token) {\n\treturn token instanceof _text.DOMAIN || token instanceof _text.TLD;\n}\n\n/**\n\tAbstract class used for manufacturing tokens of text tokens. That is rather\n\tthan the value for a token being a small string of text, it's value an array\n\tof text tokens.\n\n\tUsed for grouping together URLs, emails, hashtags, and other potential\n\tcreations.\n\n\t@class MultiToken\n\t@abstract\n*/\nvar MultiToken = (0, _createTokenClass.createTokenClass)();\n\nMultiToken.prototype = {\n\t/**\n \tString representing the type for this token\n \t@property type\n \t@default 'TOKEN'\n */\n\ttype: 'token',\n\n\t/**\n \tIs this multitoken a link?\n \t@property isLink\n \t@default false\n */\n\tisLink: false,\n\n\t/**\n \tReturn the string this token represents.\n \t@method toString\n \t@return {String}\n */\n\ttoString: function toString() {\n\t\tvar result = [];\n\t\tfor (var i = 0; i < this.v.length; i++) {\n\t\t\tresult.push(this.v[i].toString());\n\t\t}\n\t\treturn result.join('');\n\t},\n\n\n\t/**\n \tWhat should the value for this token be in the `href` HTML attribute?\n \tReturns the `.toString` value by default.\n \t\t@method toHref\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\treturn this.toString();\n\t},\n\n\n\t/**\n \tReturns a hash of relevant values for this token, which includes keys\n \t* type - Kind of token ('url', 'email', etc.)\n \t* value - Original text\n \t* href - The value that should be added to the anchor tag's href\n \t\tattribute\n \t\t@method toObject\n \t@param {String} [protocol] `'http'` by default\n \t@return {Object}\n */\n\ttoObject: function toObject() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tvalue: this.toString(),\n\t\t\thref: this.toHref(protocol)\n\t\t};\n\t}\n};\n\n/**\n\tRepresents an arbitrarily mailto email address with the prefix included\n\t@class MAILTO\n\t@extends MultiToken\n*/\nvar MAILTOEMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true\n});\n\n/**\n\tRepresents a list of tokens making up a valid email address\n\t@class EMAIL\n\t@extends MultiToken\n*/\nvar EMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true,\n\ttoHref: function toHref() {\n\t\treturn 'mailto:' + this.toString();\n\t}\n});\n\n/**\n\tRepresents some plain text\n\t@class TEXT\n\t@extends MultiToken\n*/\nvar TEXT = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'text' });\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class NL\n\t@extends MultiToken\n*/\nvar NL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'nl' });\n\n/**\n\tRepresents a list of tokens making up a valid URL\n\t@class URL\n\t@extends MultiToken\n*/\nvar URL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'url',\n\tisLink: true,\n\n\t/**\n \tLowercases relevant parts of the domain and adds the protocol if\n \trequired. Note that this will not escape unsafe HTML characters in the\n \tURL.\n \t\t@method href\n \t@param {String} protocol\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\tvar hasProtocol = false;\n\t\tvar hasSlashSlash = false;\n\t\tvar tokens = this.v;\n\t\tvar result = [];\n\t\tvar i = 0;\n\n\t\t// Make the first part of the domain lowercase\n\t\t// Lowercase protocol\n\t\twhile (tokens[i] instanceof _text.PROTOCOL) {\n\t\t\thasProtocol = true;\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Skip slash-slash\n\t\twhile (tokens[i] instanceof _text.SLASH) {\n\t\t\thasSlashSlash = true;\n\t\t\tresult.push(tokens[i].toString());\n\t\t\ti++;\n\t\t}\n\n\t\t// Lowercase all other characters in the domain\n\t\twhile (isDomainToken(tokens[i])) {\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Leave all other characters as they were written\n\t\tfor (; i < tokens.length; i++) {\n\t\t\tresult.push(tokens[i].toString());\n\t\t}\n\n\t\tresult = result.join('');\n\n\t\tif (!(hasProtocol || hasSlashSlash)) {\n\t\t\tresult = protocol + '://' + result;\n\t\t}\n\n\t\treturn result;\n\t},\n\thasProtocol: function hasProtocol() {\n\t\treturn this.v[0] instanceof _text.PROTOCOL;\n\t}\n});\n\nexports.Base = MultiToken;\nexports.MAILTOEMAIL = MAILTOEMAIL;\nexports.EMAIL = EMAIL;\nexports.NL = NL;\nexports.TEXT = TEXT;\nexports.URL = URL;"],"sourceRoot":""}